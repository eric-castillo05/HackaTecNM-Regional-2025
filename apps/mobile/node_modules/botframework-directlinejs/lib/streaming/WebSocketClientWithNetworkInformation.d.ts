import { WebSocketClient } from 'botframework-streaming';
import type { RequestHandler } from 'botframework-streaming';
type WebSocketClientWithNetworkInformationInit = {
    /**
     * Gets or sets the observer function for disconnection or error sending/receiving through WebSocket.
     *
     * Note: This function could be called multiple times, the callee is expected to ignore subsequent calls.
     */
    disconnectionHandler: (message: string) => void;
    networkInformation?: NetworkInformation | undefined;
    requestHandler: RequestHandler;
    url: string;
};
export default class WebSocketClientWithNetworkInformation extends WebSocketClient {
    #private;
    constructor({ disconnectionHandler, networkInformation, requestHandler, url }: WebSocketClientWithNetworkInformationInit);
    connect(): Promise<void>;
    disconnect(): void;
}
export {};
